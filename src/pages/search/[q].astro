---
import Layout from '../../layouts/base.astro'
import Fuse from 'fuse.js'
import { getEnv } from '../../lib/env'
import List from '../../components/list.astro'
import { getChannelInfo } from '../../lib/telegram'

const channel = await getChannelInfo(Astro, {
  q: Astro.url.searchParams.get('q') || Astro.params.q,
})

let q = Astro.url.searchParams.get('q') || ''

const URL = Astro.url.origin

const data = await fetch(`${URL}/search.json`).then((response) => response.json())

const fuse = new Fuse(data, {
  keys: ['title', 'slug', 'description', 'tag', 'content'],
  includeScore: true,
})

let searchResults = fuse.search(q)

const cse_code = getEnv(import.meta.env, Astro, 'GOOGLE_CSE_CODE')

const cse_script = `https://cse.google.com/cse.js?cx=${cse_code}`

export const prerender = false
---

{
  q.length > 0 ? (
    <Layout id="main-container">
      <h1>Search Results for "{q}"</h1>
      <div class="items">
        <ul>
          {searchResults.length > 0 ? (
            searchResults.map((result) => (
              <li>
                <a href={`${result.item.slug}`}>
                  #{result.item.id}:{result.item.title}
                </a>
              </li>
            ))
          ) : (
            <>
              <p>No results from fuse.js.</p>
            </>
          )}
        </ul>
        <p>Results below came from Google and may more accurate.</p>
        <div class="gcse-searchresults-only" />
        <script type="text/javascript" src={`${cse_script}`} />
      </div>
    </Layout>
  ) : (
    <List channel={channel} before={false} after={false} />
  )
}
